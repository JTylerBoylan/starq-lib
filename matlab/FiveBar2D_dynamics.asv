clc
clear
close all

%% Forward

syms L1_M L2_M
syms thetaA thetaB

alpha_f = 0.5 * (pi + thetaA + thetaB);
gamma_f = asin(L1_M*sin(alpha_f)/L2_M);
phi_f = pi - alpha_f - gamma_f;

theta_f = thetaA - alpha_f;
R_f = L2_M*sin(phi_f)/sin(alpha_f);

X_f = R_f*cos(theta_f);
Y_f = R_f*sin(theta_f);

P_f = [X_f; Y_f];

J_f = jacobian(P_f, [thetaA; thetaB]);

forward_jacobian = simplify(J_f)

getForwardJacobian = matlabFunction(forward_jacobian);


%% Test

L1 = 0.05;
L2 = 0.15;

thA = -0.4402;
thB = -0.4402;

Jf_00 = getForwardJacobian(L1, L2, thA, thB)

Ff = [0; -5];

Tf = Jf_00' * Ff

%% INVERSE

syms X Y

theta0_i = atan2(Y, X);
theta1_i = atan2(Y, -X);
R_i = sqrt(X^2 + Y^2);
alpha_i = acos((R_i^2 + L1_M^2 - L2_M^2) / (2 * R_i * L1_M));

thetaA_i = theta0_i + alpha_i;
thetaB_i = theta1_i + alpha_i;

Q_i = [thetaA_i, thetaB_i];

J_i = jacobian(Q_i, [X; Y]);

inverse_jacobian = simplify(real(J_i))

getInverseJacobian = matlabFunction(inverse_jacobian);

%% Test

Xe = 0;
Ye = -164.32;

Ji_00 = getInverseJacobian(L1, L2, Xe, Ye)

Ti = [-0.13; -0.13];

Fi = Ji_00' * Ti
